diff --git a/config.def.h b/config.def.h
index 6ba063c..872aa30 100644
--- a/config.def.h
+++ b/config.def.h
@@ -27,9 +27,9 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class      instance    title       tags mask     isfloating		isstyled	monitor */
+	{ "Gimp",     NULL,       NULL,       0,            1,				0,			-1 },
+	{ "Firefox",  NULL,       NULL,       1 << 8,       0,				0,			-1 },
 };
 
 /* layout(s) */
diff --git a/dwm.c b/dwm.c
index c341f62..35f624e 100644
--- a/dwm.c
+++ b/dwm.c
@@ -92,7 +92,7 @@ struct Client {
 	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;
 	int bw, oldbw;
 	unsigned int tags;
-	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
+	int isfixed, isfloating, isstyled, isurgent, neverfocus, oldstate, isfullscreen;
 	Client *next;
 	Client *snext;
 	Monitor *mon;
@@ -138,6 +138,7 @@ typedef struct {
 	const char *title;
 	unsigned int tags;
 	int isfloating;
+	int isstyled;
 	int monitor;
 } Rule;
 
@@ -286,6 +287,7 @@ applyrules(Client *c)
 
 	/* rule matching */
 	c->isfloating = 0;
+	c->isstyled = 0;
 	c->tags = 0;
 	XGetClassHint(dpy, c->win, &ch);
 	class    = ch.res_class ? ch.res_class : broken;
@@ -298,6 +300,7 @@ applyrules(Client *c)
 		&& (!r->instance || strstr(instance, r->instance)))
 		{
 			c->isfloating = r->isfloating;
+			c->isstyled = r->isstyled;
 			c->tags |= r->tags;
 			for (m = mons; m && m->num != r->monitor; m = m->next);
 			if (m)
@@ -1706,7 +1709,16 @@ tile(Monitor *m)
 		mw = m->nmaster ? (m->ww - gw) * m->mfact : 0;
 	else
 		mw = m->ww - gw;
-	for (i = 0, my = ty = gw, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
+	for (i = 0, my = ty = gw, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++) {
+		if (n == 1 && c->isstyled) {
+			bw = borderpx;
+			gw = gappx;
+			h = (m->wh - my) / (MIN(n, m->nmaster) - i) - 2 * gw;
+			resize(c, m->wx + gw, m->wy + my + gw, mw - 2 * bw - 2 * gw, h - 2 * bw, bw, 0);
+			if (my + HEIGHT(c) + gw < m->wh)
+				my += HEIGHT(c) + gw;
+			continue;
+		}
 		if (i < m->nmaster) {
 			h = (m->wh - my) / (MIN(n, m->nmaster) - i) - gw;
 			resize(c, m->wx + gw, m->wy + my, mw - 2 * bw - gw, h - 2 * bw, bw, 0);
@@ -1718,6 +1730,7 @@ tile(Monitor *m)
 			if (ty + HEIGHT(c) + gw < m->wh)
 				ty += HEIGHT(c) + gw;
 		}
+	}
 }
 
 void
