#!/bin/bash

# ---------------------------------------------------------------------
# installs secrets from https://github.com/pedrojoaopereira/dotfiles-secrets
# if the argument hostname is empty it will default to 'uname -n'
# if the argument username is empty it will default to 'whoami'
#     usage: setup-secrets <hostname | uname -n> <username | whoami>
# ---------------------------------------------------------------------

# checks required dependencies
[[ -z $(command -v doas) ]] && echo 'Missing command "doas"' && exit 1
[[ -z $(command -v git) ]] && echo 'Missing command "git"' && exit 1
[[ -z $(command -v gpg) ]] && echo 'Missing command "gpg"' && exit 1
[[ -z $(command -v yadm) ]] && echo 'Missing command "yadm"' && exit 1

# checks arguments and shell permissions
[[ $# -gt 2 ]] && echo "Usage: setup-secrets <hostname | uname -n> <username | whoami>" && exit 1
HOSTNAME=${1:-$(uname -n)}
USERNAME=${2:-$(whoami)}
[[ ${EUID} -ne 0 ]] && exec doas $0 ${HOSTNAME} ${USERNAME}
# after this point, the script is running as root

# defines bash script to run as user
run_as_user() {
  hostname=$1
  username=$2
  secrets_dir=/home/${username}/.secrets
  # clones secrets repository
  if [[ ! -d ${secrets_dir} ]]; then
    read -p "pedrojoaopereira/dotfiles-secrets API access token: " token
    git clone https://${token}@github.com/PedroJoaoPereira/dotfiles-secrets.git ${secrets_dir}
  fi
  # updates repository
  cd ${secrets_dir}
  git fetch origin && git pull
  # creates symlink to secrets
  mkdir -p /home/${username}/.local/share/yadm
  ln -sf ${secrets_dir}/${hostname} /home/${username}/.local/share/yadm/archive
  # decrypts secrets and import them
  yadm decrypt
  find /home/${username}/.ssh/* -type f -name '*sign' -exec gpg --import '{}' ';'
  gpg --list-keys --fingerprint --with-colons | sed -E -n -e 's/^fpr:::::::::([0-9A-F]+):$/\1:6:/p' | gpg --import-ownertrust
}

# runs setup as user
export -f run_as_user
su ${USERNAME} -c "run_as_user ${HOSTNAME} ${USERNAME}"
